#!python
import os.path as path
import argparse

from tools.os_util import *
from tools.puzzle import *

def process_args():
    parser = argparse.ArgumentParser(
        prog='Auld Tomes Build Script',
        description='Choreographs all tools into a sequential build.')

    parser.add_argument('-c', '--clean', dest='clean', action='store_true', help='Just clean the build')
    parser.add_argument('-p', '--premium', dest='is_premium', action='store_true', help='Build with premium puzzles')
    parser.add_argument('-i', '--include_tests', dest='include_tests', action='store_true', help='Include test puzzles')
    parser.add_argument('-n', '--no-export', dest='no_export', action='store_true', help='Don\'t export bin or html files')

    result = parser.parse_args()

    return result

def full_build(export, is_premium, include_tests):
    create_puzzle_file(is_premium, include_tests)
    if export:
        web_path = path.join(OUT_DIR, 'web')
        mkdir(web_path)
        run_s(f'pico8 oh_no_nogram.p8 -export "index.html"')
        run(['mv', 'index.html', web_path])
        run(['mv', 'index.js', web_path])

def main():
    args = process_args()

    if args.clean:
        clean()
        return

    clean()
    mkdir(OUT_DIR)
    full_build(not args.no_export, args.is_premium, args.include_tests)

if __name__ == '__main__':
    main()
